// Hybrid System Example: Bouncing Ball

g:=1;     // constant for acceleration from gravity

automaton bball
  contr_var: x, v, n;   // x is position, v is velocity, n is jumps
  synclabs: jump;
  loc falling: while 0<=x & x<=3 & -3<=v & v<=3 & n<=10 wait {x'==v & v'==-g & n'==0}
                when x==0 & v<0 sync jump do {v'==-v*0.5 & x'==x & n'==n+1} goto falling;
  initially: falling & x==2 & v==0 & n==0;
end

// --------------------- Start of Analysis -------------------------------

bball.add_label(tau);
pc:=0.05;
bball.set_partition_constraints((x,pc),(v,pc),tau);
/*
reg=bball.reachable;       // reached part of state space
reg.print("out_reach",2);     // output as list of vertices

inv=bball.get_invariants;     // grid of partitions explored
inv.print("out_inv",2);
*/
// add commands here to check reachable states

n1 = bball.{falling & x==0.15 & v==0 & n==1};
n2 = bball.{falling & x==0.15 & v==0 & n==2};
n3 = bball.{falling & x==0.15 & v==0 & n==3};
n4 = bball.{falling & x==0.15 & v==0 & n==4};
target=bball.is_reachable(n1);
target=bball.is_reachable(n2);
target=bball.is_reachable(n3);
target=bball.is_reachable(n4);
